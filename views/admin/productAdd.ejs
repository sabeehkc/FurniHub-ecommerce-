<%- include('./layout/adheader.ejs') %>
<div class="container-scroller">
    <%- include('./layout/sidenav.ejs') %>
    <div class="container-fluid page-body-wrapper">
        <%- include('./layout/topnav.ejs') %>

        <div class="container mt-5">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="card">
                        <div class="card-header bg-dark text-white">
                            <h2 class="text-center mb-0">Add Product</h2>
                        </div>
                        <div class="card-body">
                            <form action="/admin/products/addpost" method="POST" enctype="multipart/form-data" onsubmit="return validate()">
                                <div class="form-group">
                                    <label for="p-name">Product Name</label>
                                    <input type="text" name="name" id="name" class="form-control" placeholder="Enter Product Name" >
                                    <div id="nameError" class="text-danger"></div>
                                </div>
                                <div class="form-group">
                                    <label for="productCategory">Category</label>
                                    <select class="form-control" id="productCategory" name="category" >
                                        <% categories.forEach(category => { %>
                                            <option value="<%= category._id %>"><%= category.name %></option>
                                        <% }); %>
                                    </select>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="productPrice">Price</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">₹</span>
                                            </div>
                                            <input type="number" name="price" id="productPrice" class="form-control" placeholder="Enter Price" >
                                        </div>
                                        <div id="priceError" class="text-danger"></div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="productQuantity">Quantity</label>
                                        <input type="number" name="quantity" id="productQuantity" class="form-control" placeholder="Enter Quantity" >
                                        <div id="quantityError" class="text-danger"></div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="discount">Discount Price</label>
                                    <input type="number" name="discount" id="discountPrice" class="form-control" placeholder="Enter Discount Percentage"  pattern="[1-9][0-9]?">
                                    <div id="discountError" class="text-danger"></div>
                                </div>
                                <div class="form-group">
                                    <label for="description">Product Description</label>
                                    <textarea name="description" id="description" class="form-control" rows="5" placeholder="Enter Product Description" ></textarea>
                                    <div id="descriptionError" class="text-danger"></div>
                                </div>
                                <div class="form-group">
                                    <label>Image 1 *</label>
                                    <input type="file" id="productImages1" name="images" class="form-control"   >   
                                    <div id="image-preview1" class="w-50"></div>      
                                    <div id="imagesError1" class="text-danger"></div>
                                </div>
                                <div class="form-group">
                                    <label>Image 2 *</label>
                                    <input type="file" id="productImages2" name="images" class="form-control"   >
                                    <div id="image-preview2" class="w-50"></div>
                                    <div id="imagesError2" class="text-danger"></div>
                                </div>
                                <div class="form-group">
                                    <label>Image 3 *</label>
                                    <input type="file" id="productImages3" name="images" class="form-control"   >
                                    <div id="image-preview3" class="w-50"></div>
                                    <div id="imagesError3" class="text-danger"></div>
                                </div>
                                <div class="form-group">
                                    <label >Image 4 *</label>
                                    <input type="file" id="productImages4" name="images" class="form-control"  >
                                    <div id="image-preview4" class="w-50" ></div>    
                                    <div id="imagesError4" class="text-danger"></div>
                                </div>
                                
                                <div class="text-center">
                                    <button type="submit" name="submit" class="btn btn-primary">Add Product</button>
                                    <a href="/admin/products" class="btn btn-primary ml-2">Back</a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<footer class="footer mt-5">
    <div class="d-sm-flex justify-content-center justify-content-sm-between">
        <span class="text-muted d-block text-center text-sm-left d-sm-inline-block">Copyright © FurniHub.com 2024</span>
        <span class="float-none float-sm-right d-block mt-1 mt-sm-0 text-center"> Free Bootstrap admin templates from Bootstrapdash.com</span>
    </div>
</footer>

<script>
 function validate() {
        var name = document.getElementById("name").value.trim();
        var description = document.getElementById("description").value.trim();
        var price = document.getElementById("productPrice").value.trim();
        var quantity = document.getElementById("productQuantity").value.trim();
        var discount = document.getElementById("discountPrice").value.trim();
        var images1 = document.getElementById("productImages1").value.trim();
        var images2 = document.getElementById("productImages2").value.trim();
        var images3 = document.getElementById("productImages3").value.trim();
        var images4 = document.getElementById("productImages4").value.trim();

        var nameError = document.getElementById("nameError");
        var descriptionError = document.getElementById("descriptionError");
        var priceError = document.getElementById("priceError");
        var quantityError = document.getElementById("quantityError");
        var discountError = document.getElementById("discountError");
        var imagesError1 = document.getElementById("imagesError1");
        var imagesError2 = document.getElementById("imagesError2");
        var imagesError3 = document.getElementById("imagesError3");
        var imagesError4 = document.getElementById("imagesError4");
        

        // Reset errors
        nameError.textContent = "";
        descriptionError.textContent = "";
        priceError.textContent = "";
        quantityError.textContent = "";
        discountError.textContent = "";
        imagesError1.textContent = "";
        imagesError2.textContent = "";
        imagesError3.textContent = "";
        imagesError4.textContent = "";

        var isValid = true;

        // Validate product name
        if (name === "") {
            nameError.textContent = "Please enter a product name.";
            isValid = false;
        }

        // Validate product description
        if (description === "") {
            descriptionError.textContent = "Please enter a product description.";
            isValid = false;
        }

        if (isNaN(parseFloat(price)) || price <= 0) {
            priceError.textContent = "Please enter a valid price.";
            isValid = false;
        }

        if (isNaN(parseInt(quantity)) || quantity <= 0) {
            quantityError.textContent = "Please enter a valid quantity.";
            isValid = false;
        }

        if(isNaN(parseFloat(discount)) || discount <= 0 || discount >=100 ) {
            discountError.textContent = "Check Discount Percentage"
            isValid = false;
        }

        // Allowing file type
        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif|\.webp)$/i;

        if (!allowedExtensions.test(images1)) {
            imagesError1.textContent = "Please upload image"
            isValid = false;
        }

        if (!allowedExtensions.test(images2)) {
            imagesError2.textContent = "Please upload image"
            isValid = false;
        }

        if (!allowedExtensions.test(images3)) {
            imagesError3.textContent = "Please upload image"
            isValid = false;
        }

        if (!allowedExtensions.test(images4)) {
            imagesError4.textContent = "Please upload image"
            isValid = false;
        }

        return isValid;
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
  // Get all file inputs and image preview divs
  const fileInputs = document.querySelectorAll('[id^="productImages"]');
  const imagePreviews = document.querySelectorAll('[id^="image-preview"]');

  // Initialize cropper for each image preview
  const croppers = [];

  fileInputs.forEach((fileInput, index) => {
    let originalFile; // Variable to store the original file object
    let croppedBlob; // Variable to store the cropped image blob
    let cropper; // Variable to store the cropper instance
    let editButton; // Variable to store the edit button

    fileInput.addEventListener("change", function () {
      // Clear previous previews for the specific index
      imagePreviews[index].innerHTML = "";

      // Display image previews for the specific index
      Array.from(fileInput.files).forEach((file) => {
        originalFile = file; // Store the original file object

        const reader = new FileReader();

        reader.onload = function (e) {
          const img = document.createElement("img");
          img.src = e.target.result;
          img.style.maxWidth = "100%"; // Adjust the max width as needed
          img.style.height = "auto"; // Maintain aspect ratio
          img.style.maxHeight = "500px"; // Limit maximum height

          if (!editButton) {
            // Add edit button only if it doesn't exist
            editButton = document.createElement("button");
            editButton.textContent = "Edit";
            editButton.addEventListener("click", function (event) {
              // Prevent default form submission behavior
              event.preventDefault();

              if (!cropper) {
                // Initialize cropper if not already initialized
                if (croppedBlob) {
                  // Display cropped image
                  const croppedImg = document.createElement("img");
                  croppedImg.src = URL.createObjectURL(croppedBlob);
                  croppedImg.style.maxWidth = "100%";
                  croppedImg.style.height = "auto";
                  imagePreviews[index].appendChild(croppedImg);
                }

                cropper = new Cropper(img, {
                  aspectRatio: 1, // Square aspect ratio
                  viewMode: 1, // Preview mode
                  cropBoxResizable: false, // Disable resizable crop box
                  crop: function (event) {
                    // Do something with cropped data if needed
                  },
                });
              } else {
                // Re-enable cropping functionality
                cropper.replace(img);

                if (croppedBlob) {
                  // Display cropped image
                  const croppedImg = document.createElement("img");
                  croppedImg.src = URL.createObjectURL(croppedBlob);
                  croppedImg.style.maxWidth = "100%";
                  croppedImg.style.height = "auto";
                  imagePreviews[index].appendChild(croppedImg);
                }
              }

              // Save cropped image and update preview on save button click
              const saveButton = document.createElement("button");
              saveButton.textContent = "Save";
              saveButton.addEventListener("click", function () {
                // Get cropped canvas
                const canvas = cropper.getCroppedCanvas({
                  width: 500,
                  height: 500,
                });

                // Update image preview
                imagePreviews[index].innerHTML = "";
                imagePreviews[index].appendChild(canvas);

                // Replace original file with cropped image
                croppedBlob = canvas.toBlob(function (blob) {
                  // Store the cropped image blob
                  croppedBlob = blob;

                  // Hide cropper interface
                  cropper.crop();

                  // Remove edit button
                  editButton.remove();

                  // Destroy cropper instance
                  cropper.destroy();
                  cropper = null;
                });
              });

              imagePreviews[index].appendChild(saveButton);
            });

            // Append edit button to image preview
            imagePreviews[index].appendChild(editButton);
          }

          // Append original image to image preview
          imagePreviews[index].appendChild(img);
        };

        reader.readAsDataURL(file);
      });
    });
  });
});
</script>

<%- include('./layout/adfooter.ejs') %>